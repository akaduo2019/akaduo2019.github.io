<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>For record only</title>
  <icon>http://akaduo2019.github.io/icon.png</icon>
  <subtitle>一回生 &lt;br&gt; 二回熟</subtitle>
  <link href="http://akaduo2019.github.io/atom.xml" rel="self"/>
  
  <link href="http://akaduo2019.github.io/"/>
  <updated>2021-09-25T03:18:15.565Z</updated>
  <id>http://akaduo2019.github.io/</id>
  
  <author>
    <name>akaduo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django</title>
    <link href="http://akaduo2019.github.io/2021/09/25/Django/"/>
    <id>http://akaduo2019.github.io/2021/09/25/Django/</id>
    <published>2021-09-25T01:10:00.000Z</published>
    <updated>2021-09-25T03:18:15.565Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;实现一个请求&quot;&gt;实现一个请求&lt;/span&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;注册一个路由&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在urls中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;url(参数1，视图函数)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参数1:匹配规则</summary>
        
      
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>偏序关系中盖住关系的求取及格论中有补格的判定</title>
    <link href="http://akaduo2019.github.io/2020/12/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C3/"/>
    <id>http://akaduo2019.github.io/2020/12/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C3/</id>
    <published>2020-12-21T04:43:19.985Z</published>
    <updated>2020-12-21T05:57:39.074Z</updated>
    
    
    <summary type="html">&lt;p&gt;编程实现整除关系这一偏序关系上所有盖住关系的求取，并判断其对应的偏序集是否为有补格&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="experiment" scheme="http://akaduo2019.github.io/tags/experiment/"/>
    
  </entry>
  
  <entry>
    <title>置顶测试</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E7%BD%AE%E9%A1%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E7%BD%AE%E9%A1%B6%E6%B5%8B%E8%AF%95/</id>
    <published>2020-11-21T13:10:00.000Z</published>
    <updated>2021-09-25T01:00:10.652Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;😄&lt;br&gt;
😢&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="test" scheme="http://akaduo2019.github.io/categories/test/"/>
    
    
    <category term="test" scheme="http://akaduo2019.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>选课管理系统</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E9%80%89%E8%AF%BE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E9%80%89%E8%AF%BE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-11-21T07:54:22.141Z</published>
    <updated>2020-11-21T17:24:17.581Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;http://app.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;app.py&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; PyQt5 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; runlogin &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Login&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app = QApplication(sys.argv)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    login = Login()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    login.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sys.exit(app.exec_())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="ProgrammingWeek" scheme="http://akaduo2019.github.io/tags/ProgrammingWeek/"/>
    
  </entry>
  
  <entry>
    <title>集合上二元关系性质的判断</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C2/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C2/</id>
    <published>2020-11-21T07:54:22.138Z</published>
    <updated>2020-12-08T11:17:33.475Z</updated>
    
    
    <summary type="html">&lt;p&gt;编程实现集合上二元关系性质的判断，并求自反闭包，对称闭包和传递闭包(warshall算法)&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="experiment" scheme="http://akaduo2019.github.io/tags/experiment/"/>
    
  </entry>
  
  <entry>
    <title>求主析取范式和主合取范式</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C1/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E7%A6%BB%E6%95%A3%E5%AE%9E%E9%AA%8C1/</id>
    <published>2020-11-21T07:54:22.135Z</published>
    <updated>2020-11-21T13:25:04.036Z</updated>
    
    
    <summary type="html">&lt;p&gt;编程实现用真值表法求取含n个变元的合式公式所对应的主析取范式和主合取范式。&lt;br&gt;
要求：&lt;br&gt;
能够列出合式公式的真值表并给出相应主析取和主合取范式。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="experiment" scheme="http://akaduo2019.github.io/tags/experiment/"/>
    
  </entry>
  
  <entry>
    <title>无题</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E6%97%A0%E9%A2%981/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E6%97%A0%E9%A2%981/</id>
    <published>2020-11-21T07:54:22.133Z</published>
    <updated>2020-09-17T11:48:22.244Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在定义一个派生类对象时，构造函数的调用顺序如下：&lt;br&gt;
1、虚基类的构造函数&lt;br&gt;
2、非虚基类的构造函数&lt;br&gt;
3、派生类对象成员的构造函数(按定义顺序)&lt;br&gt;
4、派生类构造函数&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;析构函数的调用次序正好与构造函数的调用次序相反&lt;/p&gt;
&lt;</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>临时对象的产生</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E4%B8%B4%E6%97%B6%E5%AF%B9%E8%B1%A1/</id>
    <published>2020-11-21T07:54:22.131Z</published>
    <updated>2020-09-17T11:48:11.910Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1.以值的方式给函数传参；//以引用的方式传递时不会产生临时对象&lt;br&gt;
2.类型转换；&lt;br&gt;
3.函数需要返回一个对象时;&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>中缀表达式转后缀表达式</title>
    <link href="http://akaduo2019.github.io/2020/11/21/%E4%B8%AD%E7%BC%80to%E5%90%8E%E7%BC%80/"/>
    <id>http://akaduo2019.github.io/2020/11/21/%E4%B8%AD%E7%BC%80to%E5%90%8E%E7%BC%80/</id>
    <published>2020-11-21T07:54:22.128Z</published>
    <updated>2020-10-22T14:27:51.548Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;将中缀表达式转换为后缀表达式:&lt;br&gt;
Ⅰ.从左向右遍历&lt;/p&gt;
&lt;p&gt;Ⅱ.遇到运算数直接输出&lt;/p&gt;
&lt;p&gt;Ⅲ.遇到左括号，直接压入堆栈（入栈前，左括号优先级最高，入栈后，优先级降到最低，确保其他符号正常入栈）&lt;/p&gt;
&lt;p&gt;Ⅳ.遇到右括号，不但弹出栈顶运算符并输出，直到</summary>
        
      
    
    
    
    <category term="other" scheme="http://akaduo2019.github.io/categories/other/"/>
    
    
    <category term="other" scheme="http://akaduo2019.github.io/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>c++中的string类型</title>
    <link href="http://akaduo2019.github.io/2020/11/21/string%E7%B1%BB%E5%9E%8B/"/>
    <id>http://akaduo2019.github.io/2020/11/21/string%E7%B1%BB%E5%9E%8B/</id>
    <published>2020-11-21T07:54:22.126Z</published>
    <updated>2020-09-17T11:48:42.555Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>类的继承</title>
    <link href="http://akaduo2019.github.io/2020/11/21/python%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <id>http://akaduo2019.github.io/2020/11/21/python%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF/</id>
    <published>2020-11-21T07:54:22.123Z</published>
    <updated>2020-10-30T11:17:54.864Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;创建子类的实例时，Python首先要完成的任务时给父类所有属性赋值。为此，子类的方法__init__()需要父类施以援手：&lt;/p&gt;
&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="http://akaduo2019.github.io/2020/11/21/python%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://akaduo2019.github.io/2020/11/21/python%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-11-21T07:54:22.121Z</published>
    <updated>2020-10-30T10:35:47.059Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一、修改字符串大小写&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;string.title()  令首字母大写&lt;/li&gt;
&lt;li&gt;string.upper()  令字符串字母全部改为大写&lt;/li&gt;
&lt;li&gt;string.lower() </summary>
        
      
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>列表初入</title>
    <link href="http://akaduo2019.github.io/2020/11/21/python%E5%88%97%E8%A1%A8%E5%88%9D%E5%85%A5/"/>
    <id>http://akaduo2019.github.io/2020/11/21/python%E5%88%97%E8%A1%A8%E5%88%9D%E5%85%A5/</id>
    <published>2020-11-21T07:54:22.118Z</published>
    <updated>2020-10-30T10:35:42.190Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一、增删列表元素怒&lt;/p&gt;
&lt;p&gt;在列表中添加元素&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;list.append(‘Tempest’) 在列表末尾添加元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;list.insert(num,‘Tempest’)</summary>
        
      
    
    
    
    <category term="python" scheme="http://akaduo2019.github.io/categories/python/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>c++中的new与delete</title>
    <link href="http://akaduo2019.github.io/2020/11/21/new%E4%B8%8Edelete/"/>
    <id>http://akaduo2019.github.io/2020/11/21/new%E4%B8%8Edelete/</id>
    <published>2020-11-21T07:54:22.116Z</published>
    <updated>2020-09-17T11:48:37.673Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;new与delte都为运算符而非库函数&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;new&lt;/p&gt;
&lt;p&gt;定义符号常量 const int N=…; const int M=…;&lt;br&gt;
定义变量</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>C++中的for循环的语法</title>
    <link href="http://akaduo2019.github.io/2020/11/21/C++%E4%B8%AD%E7%9A%84for%E5%BE%AA%E7%8E%AF%E7%9A%84%E8%AF%AD%E6%B3%95/"/>
    <id>http://akaduo2019.github.io/2020/11/21/C++%E4%B8%AD%E7%9A%84for%E5%BE%AA%E7%8E%AF%E7%9A%84%E8%AF%AD%E6%B3%95/</id>
    <published>2020-11-21T07:54:22.107Z</published>
    <updated>2020-09-17T11:48:02.049Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;C++ 中 for 循环的语法：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>const与指针</title>
    <link href="http://akaduo2019.github.io/2020/08/30/const%E4%B8%8E%E6%8C%87%E9%92%88/"/>
    <id>http://akaduo2019.github.io/2020/08/30/const%E4%B8%8E%E6%8C%87%E9%92%88/</id>
    <published>2020-08-30T08:38:00.000Z</published>
    <updated>2020-09-17T11:48:04.599Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;1.常指针&lt;br&gt;
语法: void(基类型名) *const 指针名=地址值;&lt;/p&gt;
&lt;p&gt;2.指向常量的指针&lt;br&gt;
语法：void const &lt;em&gt;指针名; || const void&lt;/em&gt;指针名;&lt;/p&gt;
&lt;p&gt;3.指向常量的常指针&lt;br&gt;
语法:</summary>
        
      
    
    
    
    <category term="c++" scheme="http://akaduo2019.github.io/categories/c/"/>
    
    
    <category term="notes" scheme="http://akaduo2019.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>hello-world</title>
    <link href="http://akaduo2019.github.io/2019/11/23/hello-world/"/>
    <id>http://akaduo2019.github.io/2019/11/23/hello-world/</id>
    <published>2019-11-23T13:16:35.000Z</published>
    <updated>2020-04-02T16:16:23.936Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2&gt;&lt;span id=&quot;hello-world&quot;&gt;Hello</summary>
        
      
    
    
    
    <category term="test" scheme="http://akaduo2019.github.io/categories/test/"/>
    
    
    <category term="test" scheme="http://akaduo2019.github.io/tags/test/"/>
    
  </entry>
  
</feed>
